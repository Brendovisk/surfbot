class t{constructor(t,e,s,i,a){this.trigger=document.querySelectorAll(t),this.target=document.querySelectorAll(e),this.activeClass=s,void 0!==i&&void 0!==a&&(this.baseValue=document.querySelectorAll(i),this.finalValue=document.querySelector(a))}removeActiveClass(){this.trigger.forEach(((t,e)=>{t.parentElement.classList.remove(this.activeClass),this.target[e].classList.remove(this.activeClass)}))}addActiveClass(t){this.trigger[t].checked=!0,this.trigger[t].parentElement.classList.add(this.activeClass),this.target[t].classList.add(this.activeClass),void 0!==this.baseValue&&void 0!==this.finalValue&&this.changePrice(t)}togglePlanEventListeners(){this.trigger.forEach(((t,e)=>{t.addEventListener("click",(()=>{this.removeActiveClass(),this.addActiveClass(e)}))}))}changePrice(t){this.finalValue.innerText=this.baseValue[t].textContent}init(){return this.trigger.length&&this.target.length&&this.activeClass&&(this.addActiveClass(0),this.togglePlanEventListeners()),this}}const e=new class{constructor(){this.header=document.querySelector("[data-header='header']"),this.links=document.querySelectorAll("[data-header='link']"),this.btn=document.querySelector("[data-header='btn']"),this.toggleClass=this.toggleClass.bind(this)}toggleClass(){this.header.classList.toggle("opened"),this.header.classList.contains("opened")?this.btn.setAttribute("aria-expanded",!0):this.btn.setAttribute("aria-expanded",!1)}linksEvent(){this.links.forEach((t=>{t.addEventListener("click",(()=>{this.toggleClass()}))}))}headerEventListener(){this.btn.addEventListener("click",this.toggleClass),this.linksEvent()}init(){return this.header&&this.btn&&this.headerEventListener(),this}},s=new t("[data-toggle-trigger='plan']","[data-toggle-target='plan']","active","[data-price='base']","[data-price='value']"),i=new t("[data-toggle-trigger='payment']","[data-toggle-target='payment']","active"),a=new class{constructor(t,e,s){this.state=document.querySelector(t),this.city=document.querySelector(e),this.cep=document.querySelector(s)}getCEP(){}stateChange(){this.state.addEventListener("change",(()=>{this.getCity(this.state.value)}))}cleanOptions(t){const e=t.querySelector("option").outerHTML;return t.innerHTML=e}getState(){fetch("https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome").then((t=>{t.json().then((t=>{t.forEach((t=>{this.state.innerHTML+=`<option value="${t.sigla}">${t.nome}</option>`})),this.stateChange()}))}))}getCity(t){this.cleanOptions(this.city),fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${t}/municipios?orderBy=nome`).then((t=>{t.json().then((t=>{t.forEach((t=>{this.city.innerHTML+=`<option value="${t.sigla}">${t.nome}</option>`}))}))}))}init(){return this.state&&this.city&&this.getState(),this.cep&&this.getCEP(),this}}("select[name='estado']","select[name='cidade']","input[name='cep']");e.init(),s.init(),i.init(),a.init();
//# sourceMappingURL=index.3e65ca5a.js.map
