{"mappings":"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","sources":["src/js/modules/togglePlan.js","src/js/scripts.js","src/js/modules/header.js","src/js/modules/fetchLocale.js"],"sourcesContent":["export default class TogglePlan {\n  constructor(trigger, target, activeClass, baseValue, finalValue) {\n    this.trigger = document.querySelectorAll(trigger);\n    this.target = document.querySelectorAll(target);\n    this.activeClass = activeClass;\n\n    if (baseValue !== undefined && finalValue !== undefined) {\n      this.baseValue = document.querySelectorAll(baseValue);\n      this.finalValue = document.querySelector(finalValue);\n    }\n  }\n\n  removeActiveClass() {\n    this.trigger.forEach((element, index) => {\n      element.parentElement.classList.remove(this.activeClass);\n      this.target[index].classList.remove(this.activeClass);\n    });\n  }\n\n  addActiveClass(index) {\n    this.trigger[index].checked = true;\n    this.trigger[index].parentElement.classList.add(this.activeClass);\n    this.target[index].classList.add(this.activeClass);\n\n    if (this.baseValue !== undefined && this.finalValue !== undefined) {\n      this.changePrice(index);\n    }\n  }\n\n  togglePlanEventListeners() {\n    this.trigger.forEach((element, index) => {\n      element.addEventListener(\"click\", () => {\n        this.removeActiveClass();\n        this.addActiveClass(index);\n      });\n    });\n  }\n\n  changePrice(index) {\n    this.finalValue.innerText = this.baseValue[index].textContent;\n  }\n\n  init() {\n    if (this.trigger.length && this.target.length && this.activeClass) {\n      this.addActiveClass(0);\n      this.togglePlanEventListeners();\n    }\n    return this;\n  }\n}\n","import Header from \"./modules/header\";\nimport TogglePlan from \"./modules/togglePlan\";\nimport FetchLocals from \"./modules/fetchLocale\";\n\nconst header = new Header();\n\nconst togglePlan = new TogglePlan(\n  \"[data-toggle-trigger='plan']\",\n  \"[data-toggle-target='plan']\",\n  \"active\",\n  \"[data-price='base']\",\n  \"[data-price='value']\"\n);\n\nconst togglePaymentMethod = new TogglePlan(\n  \"[data-toggle-trigger='payment']\",\n  \"[data-toggle-target='payment']\",\n  \"active\"\n);\n\nconst fetchLocals = new FetchLocals(\"select[name='estado']\", \"select[name='cidade']\", \"input[name='cep']\");\n\nheader.init();\ntogglePlan.init();\ntogglePaymentMethod.init();\nfetchLocals.init();\n","export default class Header {\n  constructor() {\n    this.header = document.querySelector(\"[data-header='header']\");\n    this.links = document.querySelectorAll(\"[data-header='link']\");\n    this.btn = document.querySelector(\"[data-header='btn']\");\n    this.toggleClass = this.toggleClass.bind(this);\n  }\n\n  toggleClass() {\n    this.header.classList.toggle(\"opened\");\n    if (this.header.classList.contains(\"opened\")) {\n      this.btn.setAttribute(\"aria-expanded\", true);\n    } else {\n      this.btn.setAttribute(\"aria-expanded\", false);\n    }\n  }\n\n  linksEvent() {\n    this.links.forEach((link) => {\n      link.addEventListener(\"click\", () => {\n        this.toggleClass();\n      });\n    });\n  }\n\n  headerEventListener() {\n    this.btn.addEventListener(\"click\", this.toggleClass);\n    this.linksEvent();\n  }\n\n  init() {\n    if (this.header && this.btn) {\n      this.headerEventListener();\n    }\n    return this;\n  }\n}\n","export default class FetchLocals {\n  constructor(state, city, cep) {\n    this.state = document.querySelector(state);\n    this.city = document.querySelector(city);\n    this.cep = document.querySelector(cep);\n  }\n\n  getCEP() {\n    // todo\n  }\n\n  stateChange() {\n    this.state.addEventListener(\"input\", () => {\n      this.getCity(this.state.value);\n    });\n  }\n\n  cleanOptions(value) {\n    const defaultOption = value.querySelector(\"option\").outerHTML;\n    return (value.innerHTML = defaultOption);\n  }\n\n  toggleLoader() {\n    const loader = document.querySelector(\"[data-loader]\");\n    loader.classList.toggle(\"hidden\");\n    loader.classList.toggle(\"flex\");\n    document.body.classList.toggle(\"overflow-hidden\");\n    document.body.classList.toggle(\"lg:pr-4\");\n  }\n\n  getState() {\n    fetch(\"https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome\").then((response) => {\n      response.json().then((data) => {\n        data.forEach((state) => {\n          this.state.innerHTML += `<option value=\"${state.sigla}\">${state.nome}</option>`;\n        });\n        this.stateChange();\n      });\n    });\n  }\n\n  getCity(state) {\n    this.cleanOptions(this.city);\n    this.toggleLoader();\n    fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${state}/municipios?orderBy=nome`).then(\n      (response) => {\n        response.json().then((data) => {\n          data.forEach((city) => {\n            this.city.innerHTML += `<option value=\"${city.sigla}\">${city.nome}</option>`;\n          });\n          this.toggleLoader();\n        });\n      }\n    );\n  }\n\n  init() {\n    if (this.state && this.city) {\n      this.getState();\n    }\n    if (this.cep) {\n      this.getCEP();\n    }\n    return this;\n  }\n}\n"],"names":["$7a5e86fd44f79145$export$2e2bcd8739ae039","constructor","trigger","target","activeClass","baseValue","finalValue","this","document","querySelectorAll","undefined","querySelector","removeActiveClass","forEach","element","index","parentElement","classList","remove","addActiveClass","checked","add","changePrice","togglePlanEventListeners","addEventListener","innerText","textContent","init","length","$c5788eb2e609bbc3$var$header","header","links","btn","toggleClass","bind","toggle","contains","setAttribute","linksEvent","link","headerEventListener","$c5788eb2e609bbc3$var$togglePlan","$c5788eb2e609bbc3$var$togglePaymentMethod","$c5788eb2e609bbc3$var$fetchLocals","state","city","cep","getCEP","stateChange","getCity","value","cleanOptions","defaultOption","outerHTML","innerHTML","toggleLoader","loader","body","getState","fetch","then","response","json","data","sigla","nome"],"version":3,"file":"index.72f342e0.js.map"}